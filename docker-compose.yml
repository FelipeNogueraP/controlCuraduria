version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings_dev
    volumes:
      - backend-volume:/app:cached
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - app-network
    ports:
      - "8000:8000"
    depends_on:
      - db
      - migrator
  
  migrator:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings_dev
    volumes:
      - backend-volume:/app
    command: /app/migrate_load_fixtures.sh
    networks:
      - app-network
    depends_on:
      - db


  db:
    image: postgres:13
    env_file: .env
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend-volume:/app:cached
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true


volumes:
  backend-volume:
    driver: local
    driver_opts:
      type: none
      device: ./backend
      o: bind
  frontend-volume:
    driver: local
    driver_opts:
      type: none
      device: ./frontend
      o: bind
  postgres-data:

networks:
  app-network:
    driver: bridge