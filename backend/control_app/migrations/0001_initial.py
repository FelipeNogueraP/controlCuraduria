# Generated by Django 4.1.7 on 2023-04-20 03:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BordersDimensionAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borders_n', models.CharField(max_length=80)),
                ('borders_s', models.CharField(max_length=80)),
                ('borders_e', models.CharField(max_length=80)),
                ('borders_w', models.CharField(max_length=80)),
                ('area_urbanized', models.CharField(max_length=80)),
                ('area_common', models.CharField(max_length=80)),
                ('area_parking', models.CharField(max_length=80)),
                ('total_area', models.CharField(max_length=80)),
            ],
            options={
                'verbose_name_plural': 'Borders Dimension Areas',
            },
        ),
        migrations.CreateModel(
            name='BrDocumentTypeProcedureModality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrPropertyPlanimetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrPropertySoilClasification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestBuildArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestCommercialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestHousingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestInstitutionalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestProcedureObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestTypeProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrRequestUses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrSustainableDeclarationMateriality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrSustainableDeclarationMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrTypeProcedureModality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BrUniqueNationalFormNeighbor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BuildArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cadastral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('neighborhood', models.CharField(max_length=50)),
                ('vereda', models.CharField(max_length=50)),
                ('comuna', models.CharField(max_length=30)),
                ('sector', models.CharField(max_length=30)),
                ('estrato', models.IntegerField()),
                ('corregimiento', models.CharField(max_length=50)),
                ('manzana_number', models.CharField(max_length=30)),
                ('lote_number', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CommercialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mandatory', models.BooleanField(verbose_name='¿Obligatorio?')),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible_office', models.CharField(max_length=50)),
                ('filing_number_location', models.IntegerField()),
                ('filing_number_curator', models.IntegerField()),
                ('filing_number_year', models.IntegerField()),
                ('filing_number_consecutive', models.IntegerField()),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'General Data',
            },
        ),
        migrations.CreateModel(
            name='GeographicLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=50)),
                ('municipality', models.CharField(max_length=50)),
                ('vereda', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='HousingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LicenceHolderResponsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('identification_num', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=40)),
                ('electronic_notification', models.BooleanField(verbose_name='¿Acepta Notificación Electrónica?')),
                ('sign', models.BooleanField(verbose_name='Firma')),
            ],
        ),
        migrations.CreateModel(
            name='Materiality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Materialities',
            },
        ),
        migrations.CreateModel(
            name='MaterialityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MeasureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Modality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('br_document_typeProcedure_modality', models.ManyToManyField(blank=True, through='control_app.BrDocumentTypeProcedureModality', to='control_app.document')),
            ],
            options={
                'verbose_name_plural': 'Modalities',
            },
        ),
        migrations.CreateModel(
            name='Neighbor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('housing_address', models.CharField(max_length=80)),
                ('mailing_address', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='PetitionResponsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('identification_num', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=30)),
                ('mailing_address', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=40)),
                ('sign', models.BooleanField(verbose_name='Firma')),
            ],
        ),
        migrations.CreateModel(
            name='Planimetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Planimetries',
            },
        ),
        migrations.CreateModel(
            name='ProcedureObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalResponsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_name_id', models.CharField(max_length=70)),
                ('name', models.CharField(max_length=100)),
                ('identification_num', models.CharField(max_length=30)),
                ('professional_licence_num', models.IntegerField(verbose_name='Prof Lic Num')),
                ('licence_expedition', models.DateField()),
                ('email', models.EmailField(max_length=40)),
                ('required_review', models.BooleanField(verbose_name='¿Exige Supervisión Tecnica?')),
                ('sign', models.BooleanField(verbose_name='Firma')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('review_option', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_address', models.CharField(max_length=100)),
                ('previous_address', models.CharField(max_length=100)),
                ('real_state_reg_num', models.CharField(max_length=50)),
                ('br_property_planimetry', models.ManyToManyField(blank=True, through='control_app.BrPropertyPlanimetry', to='control_app.planimetry')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='RatioWallCeiling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('north', models.CharField(max_length=3)),
                ('south', models.CharField(max_length=3)),
                ('east', models.CharField(max_length=3)),
                ('west', models.CharField(max_length=3)),
                ('ceiling_height', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cultural_building', models.BooleanField()),
                ('br_procedure_objective', models.ManyToManyField(blank=True, through='control_app.BrRequestProcedureObjective', to='control_app.procedureobjective')),
                ('br_request_buildArea', models.ManyToManyField(blank=True, through='control_app.BrRequestBuildArea', to='control_app.buildarea')),
                ('br_request_commercialType', models.ManyToManyField(blank=True, through='control_app.BrRequestCommercialType', to='control_app.commercialtype')),
                ('br_request_housingType', models.ManyToManyField(blank=True, through='control_app.BrRequestHousingType', to='control_app.housingtype')),
                ('br_request_institutionalType', models.ManyToManyField(blank=True, through='control_app.BrRequestInstitutionalType', to='control_app.institutionaltype')),
            ],
        ),
        migrations.CreateModel(
            name='Uses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('br_request_uses', models.ManyToManyField(blank=True, through='control_app.BrRequestUses', to='control_app.request')),
            ],
            options={
                'verbose_name_plural': 'Uses',
            },
        ),
        migrations.CreateModel(
            name='UniqueNationalForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borders_dimension_areas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.bordersdimensionareas')),
                ('br_uniqueNatForm_Neighbor', models.ManyToManyField(blank=True, through='control_app.BrUniqueNationalFormNeighbor', to='control_app.neighbor')),
                ('document_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.document')),
                ('general_data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.generaldata')),
                ('licence_holder_responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.licenceholderresponsible')),
                ('professional_responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.professionalresponsible')),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.property')),
                ('request_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.request')),
            ],
        ),
        migrations.CreateModel(
            name='TypeProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('br_document_typeProcedure_modality', models.ManyToManyField(blank=True, through='control_app.BrDocumentTypeProcedureModality', to='control_app.document')),
                ('br_request', models.ManyToManyField(blank=True, through='control_app.BrRequestTypeProcedure', to='control_app.request')),
                ('br_typeProcedure_modality', models.ManyToManyField(blank=True, through='control_app.BrTypeProcedureModality', to='control_app.modality')),
            ],
        ),
        migrations.CreateModel(
            name='SustainableDeclaration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('water_saving_exp', models.CharField(max_length=20)),
                ('energy_saving_exp', models.CharField(max_length=20)),
                ('br_materiality', models.ManyToManyField(blank=True, through='control_app.BrSustainableDeclarationMateriality', to='control_app.materiality')),
                ('br_sustainable_measure', models.ManyToManyField(blank=True, through='control_app.BrSustainableDeclarationMeasure', to='control_app.measure')),
                ('ratio_wall_ceiling_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.ratiowallceiling')),
            ],
        ),
        migrations.CreateModel(
            name='SoilClasification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('br_property_soilClasification', models.ManyToManyField(blank=True, through='control_app.BrPropertySoilClasification', to='control_app.property')),
            ],
        ),
        migrations.AddField(
            model_name='request',
            name='br_request_uses',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestUses', to='control_app.uses'),
        ),
        migrations.AddField(
            model_name='request',
            name='br_type_procedure',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestTypeProcedure', to='control_app.typeprocedure'),
        ),
        migrations.AddField(
            model_name='request',
            name='sustainable_declaration_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_app.sustainabledeclaration'),
        ),
        migrations.AddField(
            model_name='property',
            name='br_property_soilClasification',
            field=models.ManyToManyField(blank=True, through='control_app.BrPropertySoilClasification', to='control_app.soilclasification'),
        ),
        migrations.AddField(
            model_name='property',
            name='cadastral_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.cadastral'),
        ),
        migrations.AddField(
            model_name='procedureobjective',
            name='br_request_procedure_obj',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestProcedureObjective', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='planimetry',
            name='br_property_planimetry',
            field=models.ManyToManyField(blank=True, through='control_app.BrPropertyPlanimetry', to='control_app.property'),
        ),
        migrations.CreateModel(
            name='OtherDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('br_request_commercialType', models.ManyToManyField(blank=True, through='control_app.BrRequestCommercialType', to='control_app.commercialtype')),
                ('br_request_institutionalType', models.ManyToManyField(blank=True, through='control_app.BrRequestInstitutionalType', to='control_app.institutionaltype')),
                ('br_request_procedure_obj', models.ManyToManyField(blank=True, through='control_app.BrRequestProcedureObjective', to='control_app.request')),
                ('br_request_uses', models.ManyToManyField(blank=True, through='control_app.BrRequestUses', to='control_app.uses')),
            ],
        ),
        migrations.CreateModel(
            name='Neighboring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.CharField(max_length=50)),
                ('borders', models.CharField(max_length=50)),
                ('neighbor_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.neighbor')),
            ],
        ),
        migrations.AddField(
            model_name='neighbor',
            name='br_uniqueNatForm_Neighbor',
            field=models.ManyToManyField(blank=True, through='control_app.BrUniqueNationalFormNeighbor', to='control_app.uniquenationalform'),
        ),
        migrations.AddField(
            model_name='modality',
            name='br_typeProcedure_modality',
            field=models.ManyToManyField(blank=True, through='control_app.BrTypeProcedureModality', to='control_app.typeprocedure'),
        ),
        migrations.AddField(
            model_name='measure',
            name='br_sustainable_measure',
            field=models.ManyToManyField(blank=True, through='control_app.BrSustainableDeclarationMeasure', to='control_app.sustainabledeclaration'),
        ),
        migrations.AddField(
            model_name='measure',
            name='measure_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.measuretype'),
        ),
        migrations.AddField(
            model_name='measure',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='materiality',
            name='br_sustainable',
            field=models.ManyToManyField(blank=True, through='control_app.BrSustainableDeclarationMateriality', to='control_app.sustainabledeclaration'),
        ),
        migrations.AddField(
            model_name='materiality',
            name='materiality_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.materialitytype'),
        ),
        migrations.AddField(
            model_name='materiality',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='institutionaltype',
            name='br_request_housingType',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestInstitutionalType', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='housingtype',
            name='br_request_housingType',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestHousingType', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='generaldata',
            name='geographic_location_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.geographiclocation'),
        ),
        migrations.AddField(
            model_name='document',
            name='br_document_typeProcedure_modality',
            field=models.ManyToManyField(blank=True, through='control_app.BrDocumentTypeProcedureModality', to='control_app.typeprocedure'),
        ),
        migrations.AddField(
            model_name='commercialtype',
            name='br_request_commercialType',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestCommercialType', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='buildarea',
            name='br_request_buildArea',
            field=models.ManyToManyField(blank=True, through='control_app.BrRequestBuildArea', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='bruniquenationalformneighbor',
            name='neighbor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Neighbor Id+', to='control_app.neighbor'),
        ),
        migrations.AddField(
            model_name='bruniquenationalformneighbor',
            name='unique_national_form_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Unique National Form Id+', to='control_app.uniquenationalform'),
        ),
        migrations.AddField(
            model_name='brtypeproceduremodality',
            name='modality_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Modality Id+', to='control_app.modality'),
        ),
        migrations.AddField(
            model_name='brtypeproceduremodality',
            name='type_procedure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Type Procedure Id+', to='control_app.typeprocedure'),
        ),
        migrations.AddField(
            model_name='brsustainabledeclarationmeasure',
            name='measure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Medida o mecanismo+', to='control_app.measure'),
        ),
        migrations.AddField(
            model_name='brsustainabledeclarationmeasure',
            name='sustainable_declaration_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='control_app.sustainabledeclaration'),
        ),
        migrations.AddField(
            model_name='brsustainabledeclarationmateriality',
            name='materiality_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Materiality Id+', to='control_app.materiality'),
        ),
        migrations.AddField(
            model_name='brsustainabledeclarationmateriality',
            name='sustainable_declaration_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Sustainable Declaration Id+', to='control_app.sustainabledeclaration'),
        ),
        migrations.AddField(
            model_name='brrequestuses',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Other detail+', to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='brrequestuses',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequestuses',
            name='type_uses_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Type Uses Id+', to='control_app.uses'),
        ),
        migrations.AddField(
            model_name='brrequesttypeprocedure',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequesttypeprocedure',
            name='type_procedure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Type Procedure Id+', to='control_app.typeprocedure'),
        ),
        migrations.AddField(
            model_name='brrequestprocedureobjective',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Other Detail Id+', to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='brrequestprocedureobjective',
            name='procedure_objective_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Procedure Objective Id+', to='control_app.procedureobjective'),
        ),
        migrations.AddField(
            model_name='brrequestprocedureobjective',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequestinstitutionaltype',
            name='institutional_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Institutional Type Id+', to='control_app.institutionaltype'),
        ),
        migrations.AddField(
            model_name='brrequestinstitutionaltype',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Other Detail+', to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='brrequestinstitutionaltype',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequesthousingtype',
            name='housing_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Housing Type Id+', to='control_app.housingtype'),
        ),
        migrations.AddField(
            model_name='brrequesthousingtype',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequestcommercialtype',
            name='commercial_type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Commercial Type Id+', to='control_app.commercialtype'),
        ),
        migrations.AddField(
            model_name='brrequestcommercialtype',
            name='other_detail_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Other Detail Id+', to='control_app.otherdetail'),
        ),
        migrations.AddField(
            model_name='brrequestcommercialtype',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brrequestbuildarea',
            name='build_area_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Build Area Id+', to='control_app.buildarea'),
        ),
        migrations.AddField(
            model_name='brrequestbuildarea',
            name='request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Request Id+', to='control_app.request'),
        ),
        migrations.AddField(
            model_name='brpropertysoilclasification',
            name='property_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Property Id+', to='control_app.property'),
        ),
        migrations.AddField(
            model_name='brpropertysoilclasification',
            name='soil_clasification_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Soil Clasification Id+', to='control_app.soilclasification'),
        ),
        migrations.AddField(
            model_name='brpropertyplanimetry',
            name='planimetry_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Planimetry Id+', to='control_app.planimetry'),
        ),
        migrations.AddField(
            model_name='brpropertyplanimetry',
            name='property_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Property Id+', to='control_app.property'),
        ),
        migrations.AddField(
            model_name='brdocumenttypeproceduremodality',
            name='document_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Document Id+', to='control_app.document'),
        ),
        migrations.AddField(
            model_name='brdocumenttypeproceduremodality',
            name='modality_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Modality Id+', to='control_app.modality'),
        ),
        migrations.AddField(
            model_name='brdocumenttypeproceduremodality',
            name='type_procedure_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='TypeProcedure Id+', to='control_app.typeprocedure'),
        ),
        migrations.AlterUniqueTogether(
            name='bruniquenationalformneighbor',
            unique_together={('unique_national_form_id', 'neighbor_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brtypeproceduremodality',
            unique_together={('type_procedure_id', 'modality_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brsustainabledeclarationmeasure',
            unique_together={('sustainable_declaration_id', 'measure_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brsustainabledeclarationmateriality',
            unique_together={('sustainable_declaration_id', 'materiality_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequestuses',
            unique_together={('request_id', 'type_uses_id', 'other_detail_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequesttypeprocedure',
            unique_together={('request_id', 'type_procedure_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequestprocedureobjective',
            unique_together={('request_id', 'procedure_objective_id', 'other_detail_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequestinstitutionaltype',
            unique_together={('request_id', 'institutional_type_id', 'other_detail_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequesthousingtype',
            unique_together={('request_id', 'housing_type_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequestcommercialtype',
            unique_together={('request_id', 'commercial_type_id', 'other_detail_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brrequestbuildarea',
            unique_together={('request_id', 'build_area_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brpropertysoilclasification',
            unique_together={('property_id', 'soil_clasification_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brpropertyplanimetry',
            unique_together={('property_id', 'planimetry_id')},
        ),
        migrations.AlterUniqueTogether(
            name='brdocumenttypeproceduremodality',
            unique_together={('document_id', 'type_procedure_id', 'modality_id')},
        ),
    ]
